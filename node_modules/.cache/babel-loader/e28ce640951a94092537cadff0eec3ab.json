{"ast":null,"code":"var _jsxFileName = \"/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/src/App.js\";\nimport React from 'react';\nimport { Chat, Channel, ChannelList, Window } from 'stream-chat-react';\nimport { ChannelHeader, MessageList } from 'stream-chat-react';\nimport { MessageInput, Thread } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport 'stream-chat-react/dist/css/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatClient = StreamChat.getInstance('kmtm6cx4ezxd');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiZnJvc3R5LWJyZWV6ZS04In0.7RW0V8OcOB0dSg2yDPQMo8rHbzbVr7wbkC9msrX6kus'; // custom channel preview component\n\nclass MyChannelPreview extends React.Component {\n  render() {\n    const {\n      setActiveChannel,\n      channel\n    } = this.props;\n    const unreadCount = channel.countUnread();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel_preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => setActiveChannel(channel, e),\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Unread messages: \", unreadCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n} // a very minimalistic message component\n\n\nclass MyMessageComponent extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: this.props.message.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" \", this.props.message.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nchatClient.connectUser({\n  id: 'frosty-breeze-8',\n  name: 'frosty-breeze-8',\n  image: 'https://getstream.io/random_png/?id=frosty-breeze-8&name=frosty-breeze-8'\n}, userToken);\nconst filters = {\n  type: 'messaging',\n  members: {\n    $in: ['frosty-breeze-8']\n  }\n};\nconst sort = {\n  last_message_at: -1\n};\nconst channels = chatClient.queryChannels(filters, sort);\n\nconst App = () => /*#__PURE__*/_jsxDEV(Chat, {\n  client: chatClient,\n  theme: \"messaging light\",\n  children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n    filters: filters,\n    sort: sort,\n    Preview: MyChannelPreview\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Channel, {\n    Message: MyMessageComponent,\n    children: [/*#__PURE__*/_jsxDEV(Window, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Thread, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/src/App.js"],"names":["React","Chat","Channel","ChannelList","Window","ChannelHeader","MessageList","MessageInput","Thread","StreamChat","chatClient","getInstance","userToken","MyChannelPreview","Component","render","setActiveChannel","channel","props","unreadCount","countUnread","e","data","name","MyMessageComponent","message","user","text","connectUser","id","image","filters","type","members","$in","sort","last_message_at","channels","queryChannels","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Chat, Channel, ChannelList, Window } from 'stream-chat-react';\nimport { ChannelHeader, MessageList } from 'stream-chat-react';\nimport { MessageInput, Thread } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\n\nimport 'stream-chat-react/dist/css/index.css';\n\nconst chatClient = StreamChat.getInstance('kmtm6cx4ezxd');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiZnJvc3R5LWJyZWV6ZS04In0.7RW0V8OcOB0dSg2yDPQMo8rHbzbVr7wbkC9msrX6kus';\n\n// custom channel preview component\nclass MyChannelPreview extends React.Component {\n  render() {\n    const { setActiveChannel, channel } = this.props;\n    const unreadCount = channel.countUnread();\n\n    return (\n      <div className='channel_preview'>\n        <a href='#' onClick={(e) => setActiveChannel(channel, e)}>\n          {channel.data.name}\n        </a>\n\n        <span>Unread messages: {unreadCount}</span>\n      </div>\n    );\n  }\n}\n\n// a very minimalistic message component\nclass MyMessageComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <b>{this.props.message.user.name}</b> {this.props.message.text}\n      </div>\n    );\n  }\n}\n\nchatClient.connectUser(\n  {\n    id: 'frosty-breeze-8',\n    name: 'frosty-breeze-8',\n    image: 'https://getstream.io/random_png/?id=frosty-breeze-8&name=frosty-breeze-8',\n  },\n  userToken,\n);\n\nconst filters = { type: 'messaging', members: { $in: ['frosty-breeze-8'] } };\nconst sort = { last_message_at: -1 };\nconst channels = chatClient.queryChannels(filters, sort);\n\nconst App = () => (\n  <Chat client={chatClient} theme='messaging light'>\n    <ChannelList filters={filters} sort={sort} Preview={MyChannelPreview} />\n    <Channel Message={MyMessageComponent}>\n      <Window>\n        <ChannelHeader />\n        <MessageList />\n        <MessageInput />\n      </Window>\n      <Thread />\n    </Channel>\n  </Chat>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}