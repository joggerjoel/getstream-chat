{"ast":null,"code":"import store from './store';\nconst DEFAULTS = ['+1', 'grinning', 'kissing_heart', 'heart_eyes', 'laughing', 'stuck_out_tongue_winking_eye', 'sweat_smile', 'joy', 'scream', 'disappointed', 'unamused', 'weary', 'sob', 'sunglasses', 'heart', 'poop'];\nlet frequently, initialized;\nlet defaults = {};\n\nfunction init() {\n  initialized = true;\n  frequently = store.get('frequently');\n}\n\nfunction add(emoji) {\n  if (!initialized) init();\n  var {\n    id\n  } = emoji;\n  frequently || (frequently = defaults);\n  frequently[id] || (frequently[id] = 0);\n  frequently[id] += 1;\n  store.set('last', id);\n  store.set('frequently', frequently);\n}\n\nfunction get(perLine) {\n  if (!initialized) init();\n\n  if (!frequently) {\n    defaults = {};\n    const result = [];\n\n    for (let i = 0; i < perLine; i++) {\n      defaults[DEFAULTS[i]] = perLine - i;\n      result.push(DEFAULTS[i]);\n    }\n\n    return result;\n  }\n\n  const quantity = perLine * 4;\n  const frequentlyKeys = [];\n\n  for (let key in frequently) {\n    if (frequently.hasOwnProperty(key)) {\n      frequentlyKeys.push(key);\n    }\n  }\n\n  const sorted = frequentlyKeys.sort((a, b) => frequently[a] - frequently[b]).reverse();\n  const sliced = sorted.slice(0, quantity);\n  const last = store.get('last');\n\n  if (last && sliced.indexOf(last) == -1) {\n    sliced.pop();\n    sliced.push(last);\n  }\n\n  return sliced;\n}\n\nexport default {\n  add,\n  get\n};","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/node_modules/emoji-mart/dist-modern/utils/frequently.js"],"names":["store","DEFAULTS","frequently","initialized","defaults","init","get","add","emoji","id","set","perLine","result","i","push","quantity","frequentlyKeys","key","hasOwnProperty","sorted","sort","a","b","reverse","sliced","slice","last","indexOf","pop"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,MAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,UAAP,EAAmB,eAAnB,EAAoC,YAApC,EAAkD,UAAlD,EAA8D,8BAA9D,EAA8F,aAA9F,EAA6G,KAA7G,EAAoH,QAApH,EAA8H,cAA9H,EAA8I,UAA9I,EAA0J,OAA1J,EAAmK,KAAnK,EAA0K,YAA1K,EAAwL,OAAxL,EAAiM,MAAjM,CAAjB;AACA,IAAIC,UAAJ,EAAgBC,WAAhB;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,SAASC,IAAT,GAAgB;AACdF,EAAAA,WAAW,GAAG,IAAd;AACAD,EAAAA,UAAU,GAAGF,KAAK,CAACM,GAAN,CAAU,YAAV,CAAb;AACD;;AAED,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAI,CAACL,WAAL,EAAkBE,IAAI;AACtB,MAAI;AACFI,IAAAA;AADE,MAEAD,KAFJ;AAGAN,EAAAA,UAAU,KAAKA,UAAU,GAAGE,QAAlB,CAAV;AACAF,EAAAA,UAAU,CAACO,EAAD,CAAV,KAAmBP,UAAU,CAACO,EAAD,CAAV,GAAiB,CAApC;AACAP,EAAAA,UAAU,CAACO,EAAD,CAAV,IAAkB,CAAlB;AACAT,EAAAA,KAAK,CAACU,GAAN,CAAU,MAAV,EAAkBD,EAAlB;AACAT,EAAAA,KAAK,CAACU,GAAN,CAAU,YAAV,EAAwBR,UAAxB;AACD;;AAED,SAASI,GAAT,CAAaK,OAAb,EAAsB;AACpB,MAAI,CAACR,WAAL,EAAkBE,IAAI;;AAEtB,MAAI,CAACH,UAAL,EAAiB;AACfE,IAAAA,QAAQ,GAAG,EAAX;AACA,UAAMQ,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAApB,EAA6BE,CAAC,EAA9B,EAAkC;AAChCT,MAAAA,QAAQ,CAACH,QAAQ,CAACY,CAAD,CAAT,CAAR,GAAwBF,OAAO,GAAGE,CAAlC;AACAD,MAAAA,MAAM,CAACE,IAAP,CAAYb,QAAQ,CAACY,CAAD,CAApB;AACD;;AAED,WAAOD,MAAP;AACD;;AAED,QAAMG,QAAQ,GAAGJ,OAAO,GAAG,CAA3B;AACA,QAAMK,cAAc,GAAG,EAAvB;;AAEA,OAAK,IAAIC,GAAT,IAAgBf,UAAhB,EAA4B;AAC1B,QAAIA,UAAU,CAACgB,cAAX,CAA0BD,GAA1B,CAAJ,EAAoC;AAClCD,MAAAA,cAAc,CAACF,IAAf,CAAoBG,GAApB;AACD;AACF;;AAED,QAAME,MAAM,GAAGH,cAAc,CAACI,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAUpB,UAAU,CAACmB,CAAD,CAAV,GAAgBnB,UAAU,CAACoB,CAAD,CAAxD,EAA6DC,OAA7D,EAAf;AACA,QAAMC,MAAM,GAAGL,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBV,QAAhB,CAAf;AACA,QAAMW,IAAI,GAAG1B,KAAK,CAACM,GAAN,CAAU,MAAV,CAAb;;AAEA,MAAIoB,IAAI,IAAIF,MAAM,CAACG,OAAP,CAAeD,IAAf,KAAwB,CAAC,CAArC,EAAwC;AACtCF,IAAAA,MAAM,CAACI,GAAP;AACAJ,IAAAA,MAAM,CAACV,IAAP,CAAYY,IAAZ;AACD;;AAED,SAAOF,MAAP;AACD;;AAED,eAAe;AACbjB,EAAAA,GADa;AAEbD,EAAAA;AAFa,CAAf","sourcesContent":["import store from './store';\nconst DEFAULTS = ['+1', 'grinning', 'kissing_heart', 'heart_eyes', 'laughing', 'stuck_out_tongue_winking_eye', 'sweat_smile', 'joy', 'scream', 'disappointed', 'unamused', 'weary', 'sob', 'sunglasses', 'heart', 'poop'];\nlet frequently, initialized;\nlet defaults = {};\n\nfunction init() {\n  initialized = true;\n  frequently = store.get('frequently');\n}\n\nfunction add(emoji) {\n  if (!initialized) init();\n  var {\n    id\n  } = emoji;\n  frequently || (frequently = defaults);\n  frequently[id] || (frequently[id] = 0);\n  frequently[id] += 1;\n  store.set('last', id);\n  store.set('frequently', frequently);\n}\n\nfunction get(perLine) {\n  if (!initialized) init();\n\n  if (!frequently) {\n    defaults = {};\n    const result = [];\n\n    for (let i = 0; i < perLine; i++) {\n      defaults[DEFAULTS[i]] = perLine - i;\n      result.push(DEFAULTS[i]);\n    }\n\n    return result;\n  }\n\n  const quantity = perLine * 4;\n  const frequentlyKeys = [];\n\n  for (let key in frequently) {\n    if (frequently.hasOwnProperty(key)) {\n      frequentlyKeys.push(key);\n    }\n  }\n\n  const sorted = frequentlyKeys.sort((a, b) => frequently[a] - frequently[b]).reverse();\n  const sliced = sorted.slice(0, quantity);\n  const last = store.get('last');\n\n  if (last && sliced.indexOf(last) == -1) {\n    sliced.pop();\n    sliced.push(last);\n  }\n\n  return sliced;\n}\n\nexport default {\n  add,\n  get\n};"]},"metadata":{},"sourceType":"module"}