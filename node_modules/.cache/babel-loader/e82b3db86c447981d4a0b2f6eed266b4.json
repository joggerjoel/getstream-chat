{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as icons from '../../svgs';\nimport store from '../../utils/store';\nimport frequently from '../../utils/frequently';\nimport { deepMerge, measureScrollbar, getSanitizedData } from '../../utils';\nimport { uncompress } from '../../utils/data';\nimport { PickerPropTypes } from '../../utils/shared-props';\nimport Anchors from '../anchors';\nimport Category from '../category';\nimport Preview from '../preview';\nimport Search from '../search';\nimport { PickerDefaultProps } from '../../utils/shared-default-props';\nconst I18N = {\n  search: 'Search',\n  clear: 'Clear',\n  // Accessible label on \"clear\" button\n  notfound: 'No Emoji Found',\n  skintext: 'Choose your default skin tone',\n  categories: {\n    search: 'Search Results',\n    recent: 'Frequently Used',\n    people: 'Smileys & People',\n    nature: 'Animals & Nature',\n    foods: 'Food & Drink',\n    activity: 'Activity',\n    places: 'Travel & Places',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags',\n    custom: 'Custom'\n  },\n  categorieslabel: 'Emoji categories',\n  // Accessible title for the list of categories\n  skintones: {\n    1: 'Default Skin Tone',\n    2: 'Light Skin Tone',\n    3: 'Medium-Light Skin Tone',\n    4: 'Medium Skin Tone',\n    5: 'Medium-Dark Skin Tone',\n    6: 'Dark Skin Tone'\n  }\n};\nexport default class NimblePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.CUSTOM = [];\n    this.RECENT_CATEGORY = {\n      id: 'recent',\n      name: 'Recent',\n      emojis: null\n    };\n    this.SEARCH_CATEGORY = {\n      id: 'search',\n      name: 'Search',\n      emojis: null,\n      anchor: false\n    };\n\n    if (props.data.compressed) {\n      uncompress(props.data);\n    }\n\n    this.data = props.data;\n    this.i18n = deepMerge(I18N, props.i18n);\n    this.icons = deepMerge(icons, props.icons);\n    this.state = {\n      firstRender: true\n    };\n    this.categories = [];\n    let allCategories = [].concat(this.data.categories);\n\n    if (props.custom.length > 0) {\n      const customCategories = {};\n      let customCategoriesCreated = 0;\n      props.custom.forEach(emoji => {\n        if (!customCategories[emoji.customCategory]) {\n          customCategories[emoji.customCategory] = {\n            id: emoji.customCategory ? `custom-${emoji.customCategory}` : 'custom',\n            name: emoji.customCategory || 'Custom',\n            emojis: [],\n            anchor: customCategoriesCreated === 0\n          };\n          customCategoriesCreated++;\n        }\n\n        const category = customCategories[emoji.customCategory];\n\n        const customEmoji = _objectSpread({}, emoji, {\n          // `<Category />` expects emoji to have an `id`.\n          id: emoji.short_names[0],\n          custom: true\n        });\n\n        category.emojis.push(customEmoji);\n        this.CUSTOM.push(customEmoji);\n      });\n      allCategories = allCategories.concat(Object.keys(customCategories).map(key => customCategories[key]));\n    }\n\n    this.hideRecent = true;\n\n    if (props.include != undefined) {\n      allCategories.sort((a, b) => {\n        if (props.include.indexOf(a.id) > props.include.indexOf(b.id)) {\n          return 1;\n        }\n\n        return -1;\n      });\n    }\n\n    for (let categoryIndex = 0; categoryIndex < allCategories.length; categoryIndex++) {\n      const category = allCategories[categoryIndex];\n      let isIncluded = props.include && props.include.length ? props.include.indexOf(category.id) > -1 : true;\n      let isExcluded = props.exclude && props.exclude.length ? props.exclude.indexOf(category.id) > -1 : false;\n\n      if (!isIncluded || isExcluded) {\n        continue;\n      }\n\n      if (props.emojisToShowFilter) {\n        let newEmojis = [];\n        const {\n          emojis\n        } = category;\n\n        for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {\n          const emoji = emojis[emojiIndex];\n\n          if (props.emojisToShowFilter(this.data.emojis[emoji] || emoji)) {\n            newEmojis.push(emoji);\n          }\n        }\n\n        if (newEmojis.length) {\n          let newCategory = {\n            emojis: newEmojis,\n            name: category.name,\n            id: category.id\n          };\n          this.categories.push(newCategory);\n        }\n      } else {\n        this.categories.push(category);\n      }\n    }\n\n    let includeRecent = props.include && props.include.length ? props.include.indexOf(this.RECENT_CATEGORY.id) > -1 : true;\n    let excludeRecent = props.exclude && props.exclude.length ? props.exclude.indexOf(this.RECENT_CATEGORY.id) > -1 : false;\n\n    if (includeRecent && !excludeRecent) {\n      this.hideRecent = false;\n      this.categories.unshift(this.RECENT_CATEGORY);\n    }\n\n    if (this.categories[0]) {\n      this.categories[0].first = true;\n    }\n\n    this.categories.unshift(this.SEARCH_CATEGORY);\n    this.setAnchorsRef = this.setAnchorsRef.bind(this);\n    this.handleAnchorClick = this.handleAnchorClick.bind(this);\n    this.setSearchRef = this.setSearchRef.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.setScrollRef = this.setScrollRef.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleScrollPaint = this.handleScrollPaint.bind(this);\n    this.handleEmojiOver = this.handleEmojiOver.bind(this);\n    this.handleEmojiLeave = this.handleEmojiLeave.bind(this);\n    this.handleEmojiClick = this.handleEmojiClick.bind(this);\n    this.handleEmojiSelect = this.handleEmojiSelect.bind(this);\n    this.setPreviewRef = this.setPreviewRef.bind(this);\n    this.handleSkinChange = this.handleSkinChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleDarkMatchMediaChange = this.handleDarkMatchMediaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.firstRender) {\n      this.testStickyPosition();\n      this.firstRenderTimeout = setTimeout(() => {\n        this.setState({\n          firstRender: false\n        });\n      }, 60);\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateCategoriesSize();\n    this.handleScroll();\n  }\n\n  componentWillUnmount() {\n    this.SEARCH_CATEGORY.emojis = null;\n    clearTimeout(this.leaveTimeout);\n    clearTimeout(this.firstRenderTimeout);\n\n    if (this.darkMatchMedia) {\n      this.darkMatchMedia.removeListener(this.handleDarkMatchMediaChange);\n    }\n  }\n\n  testStickyPosition() {\n    const stickyTestElement = document.createElement('div');\n    const prefixes = ['', '-webkit-', '-ms-', '-moz-', '-o-'];\n    prefixes.forEach(prefix => stickyTestElement.style.position = `${prefix}sticky`);\n    this.hasStickyPosition = !!stickyTestElement.style.position.length;\n  }\n\n  getPreferredTheme() {\n    if (this.props.theme != 'auto') return this.props.theme;\n    if (this.state.theme) return this.state.theme;\n    if (typeof matchMedia !== 'function') return PickerDefaultProps.theme;\n\n    if (!this.darkMatchMedia) {\n      this.darkMatchMedia = matchMedia('(prefers-color-scheme: dark)');\n      this.darkMatchMedia.addListener(this.handleDarkMatchMediaChange);\n    }\n\n    if (this.darkMatchMedia.media.match(/^not/)) return PickerDefaultProps.theme;\n    return this.darkMatchMedia.matches ? 'dark' : 'light';\n  }\n\n  handleDarkMatchMediaChange() {\n    this.setState({\n      theme: this.darkMatchMedia.matches ? 'dark' : 'light'\n    });\n  }\n\n  handleEmojiOver(emoji) {\n    var {\n      preview\n    } = this;\n\n    if (!preview) {\n      return;\n    } // Use Array.prototype.find() when it is more widely supported.\n\n\n    const emojiData = this.CUSTOM.filter(customEmoji => customEmoji.id === emoji.id)[0];\n\n    for (let key in emojiData) {\n      if (emojiData.hasOwnProperty(key)) {\n        emoji[key] = emojiData[key];\n      }\n    }\n\n    preview.setState({\n      emoji\n    });\n    clearTimeout(this.leaveTimeout);\n  }\n\n  handleEmojiLeave(emoji) {\n    var {\n      preview\n    } = this;\n\n    if (!preview) {\n      return;\n    }\n\n    this.leaveTimeout = setTimeout(() => {\n      preview.setState({\n        emoji: null\n      });\n    }, 16);\n  }\n\n  handleEmojiClick(emoji, e) {\n    this.props.onClick(emoji, e);\n    this.handleEmojiSelect(emoji);\n  }\n\n  handleEmojiSelect(emoji) {\n    this.props.onSelect(emoji);\n    if (!this.hideRecent && !this.props.recent) frequently.add(emoji);\n    var component = this.categoryRefs['category-1'];\n\n    if (component) {\n      let maxMargin = component.maxMargin;\n\n      if (this.props.enableFrequentEmojiSort) {\n        component.forceUpdate();\n      }\n\n      requestAnimationFrame(() => {\n        if (!this.scroll) return;\n        component.memoizeSize();\n        if (maxMargin == component.maxMargin) return;\n        this.updateCategoriesSize();\n        this.handleScrollPaint();\n\n        if (this.SEARCH_CATEGORY.emojis) {\n          component.updateDisplay('none');\n        }\n      });\n    }\n  }\n\n  handleScroll() {\n    if (!this.waitingForPaint) {\n      this.waitingForPaint = true;\n      requestAnimationFrame(this.handleScrollPaint);\n    }\n  }\n\n  handleScrollPaint() {\n    this.waitingForPaint = false;\n\n    if (!this.scroll) {\n      return;\n    }\n\n    let activeCategory = null;\n\n    if (this.SEARCH_CATEGORY.emojis) {\n      activeCategory = this.SEARCH_CATEGORY;\n    } else {\n      var target = this.scroll,\n          scrollTop = target.scrollTop,\n          scrollingDown = scrollTop > (this.scrollTop || 0),\n          minTop = 0;\n\n      for (let i = 0, l = this.categories.length; i < l; i++) {\n        let ii = scrollingDown ? this.categories.length - 1 - i : i,\n            category = this.categories[ii],\n            component = this.categoryRefs[`category-${ii}`];\n\n        if (component) {\n          let active = component.handleScroll(scrollTop);\n\n          if (!minTop || component.top < minTop) {\n            if (component.top > 0) {\n              minTop = component.top;\n            }\n          }\n\n          if (active && !activeCategory) {\n            activeCategory = category;\n          }\n        }\n      }\n\n      if (scrollTop < minTop) {\n        activeCategory = this.categories.filter(category => !(category.anchor === false))[0];\n      } else if (scrollTop + this.clientHeight >= this.scrollHeight) {\n        activeCategory = this.categories[this.categories.length - 1];\n      }\n    }\n\n    if (activeCategory) {\n      let {\n        anchors\n      } = this,\n          {\n        name: categoryName\n      } = activeCategory;\n\n      if (anchors.state.selected != categoryName) {\n        anchors.setState({\n          selected: categoryName\n        });\n      }\n    }\n\n    this.scrollTop = scrollTop;\n  }\n\n  handleSearch(emojis) {\n    this.SEARCH_CATEGORY.emojis = emojis;\n\n    for (let i = 0, l = this.categories.length; i < l; i++) {\n      let component = this.categoryRefs[`category-${i}`];\n\n      if (component && component.props.name != 'Search') {\n        let display = emojis ? 'none' : 'inherit';\n        component.updateDisplay(display);\n      }\n    }\n\n    this.forceUpdate();\n\n    if (this.scroll) {\n      this.scroll.scrollTop = 0;\n    }\n\n    this.handleScroll();\n  }\n\n  handleAnchorClick(category, i) {\n    var component = this.categoryRefs[`category-${i}`],\n        {\n      scroll,\n      anchors\n    } = this,\n        scrollToComponent = null;\n\n    scrollToComponent = () => {\n      if (component) {\n        let {\n          top\n        } = component;\n\n        if (category.first) {\n          top = 0;\n        } else {\n          top += 1;\n        }\n\n        scroll.scrollTop = top;\n      }\n    };\n\n    if (this.SEARCH_CATEGORY.emojis) {\n      this.handleSearch(null);\n      this.search.clear();\n      requestAnimationFrame(scrollToComponent);\n    } else {\n      scrollToComponent();\n    }\n  }\n\n  handleSkinChange(skin) {\n    var newState = {\n      skin: skin\n    },\n        {\n      onSkinChange\n    } = this.props;\n    this.setState(newState);\n    store.update(newState);\n    onSkinChange(skin);\n  }\n\n  handleKeyDown(e) {\n    let handled = false;\n\n    switch (e.keyCode) {\n      case 13:\n        let emoji;\n\n        if (this.SEARCH_CATEGORY.emojis && this.SEARCH_CATEGORY.emojis.length && (emoji = getSanitizedData(this.SEARCH_CATEGORY.emojis[0], this.state.skin, this.props.set, this.props.data))) {\n          this.handleEmojiSelect(emoji);\n          handled = true;\n        }\n\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n    }\n  }\n\n  updateCategoriesSize() {\n    for (let i = 0, l = this.categories.length; i < l; i++) {\n      let component = this.categoryRefs[`category-${i}`];\n      if (component) component.memoizeSize();\n    }\n\n    if (this.scroll) {\n      let target = this.scroll;\n      this.scrollHeight = target.scrollHeight;\n      this.clientHeight = target.clientHeight;\n    }\n  }\n\n  getCategories() {\n    return this.state.firstRender ? this.categories.slice(0, 3) : this.categories;\n  }\n\n  setAnchorsRef(c) {\n    this.anchors = c;\n  }\n\n  setSearchRef(c) {\n    this.search = c;\n  }\n\n  setPreviewRef(c) {\n    this.preview = c;\n  }\n\n  setScrollRef(c) {\n    this.scroll = c;\n  }\n\n  setCategoryRef(name, c) {\n    if (!this.categoryRefs) {\n      this.categoryRefs = {};\n    }\n\n    this.categoryRefs[name] = c;\n  }\n\n  render() {\n    var {\n      perLine,\n      emojiSize,\n      set,\n      sheetSize,\n      sheetColumns,\n      sheetRows,\n      style,\n      title,\n      emoji,\n      color,\n      native,\n      backgroundImageFn,\n      emojisToShowFilter,\n      showPreview,\n      showSkinTones,\n      emojiTooltip,\n      useButton,\n      include,\n      exclude,\n      recent,\n      autoFocus,\n      skinEmoji,\n      notFound,\n      notFoundEmoji\n    } = this.props;\n    var width = perLine * (emojiSize + 12) + 12 + 2 + measureScrollbar();\n    var theme = this.getPreferredTheme();\n    var skin = this.props.skin || this.state.skin || store.get('skin') || this.props.defaultSkin;\n    return React.createElement(\"section\", {\n      style: _objectSpread({\n        width: width\n      }, style),\n      className: `emoji-mart emoji-mart-${theme}`,\n      \"aria-label\": title,\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(\"div\", {\n      className: \"emoji-mart-bar\"\n    }, React.createElement(Anchors, {\n      ref: this.setAnchorsRef,\n      data: this.data,\n      i18n: this.i18n,\n      color: color,\n      categories: this.categories,\n      onAnchorClick: this.handleAnchorClick,\n      icons: this.icons\n    })), React.createElement(Search, {\n      ref: this.setSearchRef,\n      onSearch: this.handleSearch,\n      data: this.data,\n      i18n: this.i18n,\n      emojisToShowFilter: emojisToShowFilter,\n      include: include,\n      exclude: exclude,\n      custom: this.CUSTOM,\n      autoFocus: autoFocus\n    }), React.createElement(\"div\", {\n      ref: this.setScrollRef,\n      className: \"emoji-mart-scroll\",\n      onScroll: this.handleScroll\n    }, this.getCategories().map((category, i) => {\n      return React.createElement(Category, {\n        ref: this.setCategoryRef.bind(this, `category-${i}`),\n        key: category.name,\n        id: category.id,\n        name: category.name,\n        emojis: category.emojis,\n        perLine: perLine,\n        native: native,\n        hasStickyPosition: this.hasStickyPosition,\n        data: this.data,\n        i18n: this.i18n,\n        recent: category.id == this.RECENT_CATEGORY.id ? recent : undefined,\n        custom: category.id == this.RECENT_CATEGORY.id ? this.CUSTOM : undefined,\n        emojiProps: {\n          native: native,\n          skin: skin,\n          size: emojiSize,\n          set: set,\n          sheetSize: sheetSize,\n          sheetColumns: sheetColumns,\n          sheetRows: sheetRows,\n          forceSize: native,\n          tooltip: emojiTooltip,\n          backgroundImageFn: backgroundImageFn,\n          useButton: useButton,\n          onOver: this.handleEmojiOver,\n          onLeave: this.handleEmojiLeave,\n          onClick: this.handleEmojiClick\n        },\n        notFound: notFound,\n        notFoundEmoji: notFoundEmoji\n      });\n    })), (showPreview || showSkinTones) && React.createElement(\"div\", {\n      className: \"emoji-mart-bar\"\n    }, React.createElement(Preview, {\n      ref: this.setPreviewRef,\n      data: this.data,\n      title: title,\n      emoji: emoji,\n      showSkinTones: showSkinTones,\n      showPreview: showPreview,\n      emojiProps: {\n        native: native,\n        size: 38,\n        skin: skin,\n        set: set,\n        sheetSize: sheetSize,\n        sheetColumns: sheetColumns,\n        sheetRows: sheetRows,\n        backgroundImageFn: backgroundImageFn\n      },\n      skinsProps: {\n        skin: skin,\n        onChange: this.handleSkinChange,\n        skinEmoji: skinEmoji\n      },\n      i18n: this.i18n\n    })));\n  }\n\n}\nNimblePicker.propTypes\n/* remove-proptypes */\n= _objectSpread({}, PickerPropTypes, {\n  data: PropTypes.object.isRequired\n});\nNimblePicker.defaultProps = _objectSpread({}, PickerDefaultProps);","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/node_modules/emoji-mart/dist-modern/components/picker/nimble-picker.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","PropTypes","icons","store","frequently","deepMerge","measureScrollbar","getSanitizedData","uncompress","PickerPropTypes","Anchors","Category","Preview","Search","PickerDefaultProps","I18N","search","clear","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","flags","custom","categorieslabel","skintones","NimblePicker","PureComponent","constructor","props","CUSTOM","RECENT_CATEGORY","id","name","emojis","SEARCH_CATEGORY","anchor","data","compressed","i18n","state","firstRender","allCategories","concat","customCategories","customCategoriesCreated","emoji","customCategory","category","customEmoji","short_names","map","hideRecent","include","undefined","sort","a","b","indexOf","categoryIndex","isIncluded","isExcluded","exclude","emojisToShowFilter","newEmojis","emojiIndex","newCategory","includeRecent","excludeRecent","unshift","first","setAnchorsRef","bind","handleAnchorClick","setSearchRef","handleSearch","setScrollRef","handleScroll","handleScrollPaint","handleEmojiOver","handleEmojiLeave","handleEmojiClick","handleEmojiSelect","setPreviewRef","handleSkinChange","handleKeyDown","handleDarkMatchMediaChange","componentDidMount","testStickyPosition","firstRenderTimeout","setTimeout","setState","componentDidUpdate","updateCategoriesSize","componentWillUnmount","clearTimeout","leaveTimeout","darkMatchMedia","removeListener","stickyTestElement","document","createElement","prefixes","prefix","style","position","hasStickyPosition","getPreferredTheme","theme","matchMedia","addListener","media","match","matches","preview","emojiData","hasOwnProperty","e","onClick","onSelect","add","component","categoryRefs","maxMargin","enableFrequentEmojiSort","forceUpdate","requestAnimationFrame","scroll","memoizeSize","updateDisplay","waitingForPaint","activeCategory","scrollTop","scrollingDown","minTop","l","ii","active","top","clientHeight","scrollHeight","anchors","categoryName","selected","display","scrollToComponent","skin","newState","onSkinChange","update","handled","keyCode","set","preventDefault","getCategories","slice","c","setCategoryRef","render","perLine","emojiSize","sheetSize","sheetColumns","sheetRows","title","color","native","backgroundImageFn","showPreview","showSkinTones","emojiTooltip","useButton","autoFocus","skinEmoji","notFound","notFoundEmoji","width","get","defaultSkin","className","onKeyDown","ref","onAnchorClick","onSearch","onScroll","emojiProps","size","forceSize","tooltip","onOver","onLeave","skinsProps","onChange","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as icons from '../../svgs';\nimport store from '../../utils/store';\nimport frequently from '../../utils/frequently';\nimport { deepMerge, measureScrollbar, getSanitizedData } from '../../utils';\nimport { uncompress } from '../../utils/data';\nimport { PickerPropTypes } from '../../utils/shared-props';\nimport Anchors from '../anchors';\nimport Category from '../category';\nimport Preview from '../preview';\nimport Search from '../search';\nimport { PickerDefaultProps } from '../../utils/shared-default-props';\nconst I18N = {\n  search: 'Search',\n  clear: 'Clear',\n  // Accessible label on \"clear\" button\n  notfound: 'No Emoji Found',\n  skintext: 'Choose your default skin tone',\n  categories: {\n    search: 'Search Results',\n    recent: 'Frequently Used',\n    people: 'Smileys & People',\n    nature: 'Animals & Nature',\n    foods: 'Food & Drink',\n    activity: 'Activity',\n    places: 'Travel & Places',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags',\n    custom: 'Custom'\n  },\n  categorieslabel: 'Emoji categories',\n  // Accessible title for the list of categories\n  skintones: {\n    1: 'Default Skin Tone',\n    2: 'Light Skin Tone',\n    3: 'Medium-Light Skin Tone',\n    4: 'Medium Skin Tone',\n    5: 'Medium-Dark Skin Tone',\n    6: 'Dark Skin Tone'\n  }\n};\nexport default class NimblePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.CUSTOM = [];\n    this.RECENT_CATEGORY = {\n      id: 'recent',\n      name: 'Recent',\n      emojis: null\n    };\n    this.SEARCH_CATEGORY = {\n      id: 'search',\n      name: 'Search',\n      emojis: null,\n      anchor: false\n    };\n\n    if (props.data.compressed) {\n      uncompress(props.data);\n    }\n\n    this.data = props.data;\n    this.i18n = deepMerge(I18N, props.i18n);\n    this.icons = deepMerge(icons, props.icons);\n    this.state = {\n      firstRender: true\n    };\n    this.categories = [];\n    let allCategories = [].concat(this.data.categories);\n\n    if (props.custom.length > 0) {\n      const customCategories = {};\n      let customCategoriesCreated = 0;\n      props.custom.forEach(emoji => {\n        if (!customCategories[emoji.customCategory]) {\n          customCategories[emoji.customCategory] = {\n            id: emoji.customCategory ? `custom-${emoji.customCategory}` : 'custom',\n            name: emoji.customCategory || 'Custom',\n            emojis: [],\n            anchor: customCategoriesCreated === 0\n          };\n          customCategoriesCreated++;\n        }\n\n        const category = customCategories[emoji.customCategory];\n\n        const customEmoji = _objectSpread({}, emoji, {\n          // `<Category />` expects emoji to have an `id`.\n          id: emoji.short_names[0],\n          custom: true\n        });\n\n        category.emojis.push(customEmoji);\n        this.CUSTOM.push(customEmoji);\n      });\n      allCategories = allCategories.concat(Object.keys(customCategories).map(key => customCategories[key]));\n    }\n\n    this.hideRecent = true;\n\n    if (props.include != undefined) {\n      allCategories.sort((a, b) => {\n        if (props.include.indexOf(a.id) > props.include.indexOf(b.id)) {\n          return 1;\n        }\n\n        return -1;\n      });\n    }\n\n    for (let categoryIndex = 0; categoryIndex < allCategories.length; categoryIndex++) {\n      const category = allCategories[categoryIndex];\n      let isIncluded = props.include && props.include.length ? props.include.indexOf(category.id) > -1 : true;\n      let isExcluded = props.exclude && props.exclude.length ? props.exclude.indexOf(category.id) > -1 : false;\n\n      if (!isIncluded || isExcluded) {\n        continue;\n      }\n\n      if (props.emojisToShowFilter) {\n        let newEmojis = [];\n        const {\n          emojis\n        } = category;\n\n        for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {\n          const emoji = emojis[emojiIndex];\n\n          if (props.emojisToShowFilter(this.data.emojis[emoji] || emoji)) {\n            newEmojis.push(emoji);\n          }\n        }\n\n        if (newEmojis.length) {\n          let newCategory = {\n            emojis: newEmojis,\n            name: category.name,\n            id: category.id\n          };\n          this.categories.push(newCategory);\n        }\n      } else {\n        this.categories.push(category);\n      }\n    }\n\n    let includeRecent = props.include && props.include.length ? props.include.indexOf(this.RECENT_CATEGORY.id) > -1 : true;\n    let excludeRecent = props.exclude && props.exclude.length ? props.exclude.indexOf(this.RECENT_CATEGORY.id) > -1 : false;\n\n    if (includeRecent && !excludeRecent) {\n      this.hideRecent = false;\n      this.categories.unshift(this.RECENT_CATEGORY);\n    }\n\n    if (this.categories[0]) {\n      this.categories[0].first = true;\n    }\n\n    this.categories.unshift(this.SEARCH_CATEGORY);\n    this.setAnchorsRef = this.setAnchorsRef.bind(this);\n    this.handleAnchorClick = this.handleAnchorClick.bind(this);\n    this.setSearchRef = this.setSearchRef.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.setScrollRef = this.setScrollRef.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleScrollPaint = this.handleScrollPaint.bind(this);\n    this.handleEmojiOver = this.handleEmojiOver.bind(this);\n    this.handleEmojiLeave = this.handleEmojiLeave.bind(this);\n    this.handleEmojiClick = this.handleEmojiClick.bind(this);\n    this.handleEmojiSelect = this.handleEmojiSelect.bind(this);\n    this.setPreviewRef = this.setPreviewRef.bind(this);\n    this.handleSkinChange = this.handleSkinChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleDarkMatchMediaChange = this.handleDarkMatchMediaChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.firstRender) {\n      this.testStickyPosition();\n      this.firstRenderTimeout = setTimeout(() => {\n        this.setState({\n          firstRender: false\n        });\n      }, 60);\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateCategoriesSize();\n    this.handleScroll();\n  }\n\n  componentWillUnmount() {\n    this.SEARCH_CATEGORY.emojis = null;\n    clearTimeout(this.leaveTimeout);\n    clearTimeout(this.firstRenderTimeout);\n\n    if (this.darkMatchMedia) {\n      this.darkMatchMedia.removeListener(this.handleDarkMatchMediaChange);\n    }\n  }\n\n  testStickyPosition() {\n    const stickyTestElement = document.createElement('div');\n    const prefixes = ['', '-webkit-', '-ms-', '-moz-', '-o-'];\n    prefixes.forEach(prefix => stickyTestElement.style.position = `${prefix}sticky`);\n    this.hasStickyPosition = !!stickyTestElement.style.position.length;\n  }\n\n  getPreferredTheme() {\n    if (this.props.theme != 'auto') return this.props.theme;\n    if (this.state.theme) return this.state.theme;\n    if (typeof matchMedia !== 'function') return PickerDefaultProps.theme;\n\n    if (!this.darkMatchMedia) {\n      this.darkMatchMedia = matchMedia('(prefers-color-scheme: dark)');\n      this.darkMatchMedia.addListener(this.handleDarkMatchMediaChange);\n    }\n\n    if (this.darkMatchMedia.media.match(/^not/)) return PickerDefaultProps.theme;\n    return this.darkMatchMedia.matches ? 'dark' : 'light';\n  }\n\n  handleDarkMatchMediaChange() {\n    this.setState({\n      theme: this.darkMatchMedia.matches ? 'dark' : 'light'\n    });\n  }\n\n  handleEmojiOver(emoji) {\n    var {\n      preview\n    } = this;\n\n    if (!preview) {\n      return;\n    } // Use Array.prototype.find() when it is more widely supported.\n\n\n    const emojiData = this.CUSTOM.filter(customEmoji => customEmoji.id === emoji.id)[0];\n\n    for (let key in emojiData) {\n      if (emojiData.hasOwnProperty(key)) {\n        emoji[key] = emojiData[key];\n      }\n    }\n\n    preview.setState({\n      emoji\n    });\n    clearTimeout(this.leaveTimeout);\n  }\n\n  handleEmojiLeave(emoji) {\n    var {\n      preview\n    } = this;\n\n    if (!preview) {\n      return;\n    }\n\n    this.leaveTimeout = setTimeout(() => {\n      preview.setState({\n        emoji: null\n      });\n    }, 16);\n  }\n\n  handleEmojiClick(emoji, e) {\n    this.props.onClick(emoji, e);\n    this.handleEmojiSelect(emoji);\n  }\n\n  handleEmojiSelect(emoji) {\n    this.props.onSelect(emoji);\n    if (!this.hideRecent && !this.props.recent) frequently.add(emoji);\n    var component = this.categoryRefs['category-1'];\n\n    if (component) {\n      let maxMargin = component.maxMargin;\n\n      if (this.props.enableFrequentEmojiSort) {\n        component.forceUpdate();\n      }\n\n      requestAnimationFrame(() => {\n        if (!this.scroll) return;\n        component.memoizeSize();\n        if (maxMargin == component.maxMargin) return;\n        this.updateCategoriesSize();\n        this.handleScrollPaint();\n\n        if (this.SEARCH_CATEGORY.emojis) {\n          component.updateDisplay('none');\n        }\n      });\n    }\n  }\n\n  handleScroll() {\n    if (!this.waitingForPaint) {\n      this.waitingForPaint = true;\n      requestAnimationFrame(this.handleScrollPaint);\n    }\n  }\n\n  handleScrollPaint() {\n    this.waitingForPaint = false;\n\n    if (!this.scroll) {\n      return;\n    }\n\n    let activeCategory = null;\n\n    if (this.SEARCH_CATEGORY.emojis) {\n      activeCategory = this.SEARCH_CATEGORY;\n    } else {\n      var target = this.scroll,\n          scrollTop = target.scrollTop,\n          scrollingDown = scrollTop > (this.scrollTop || 0),\n          minTop = 0;\n\n      for (let i = 0, l = this.categories.length; i < l; i++) {\n        let ii = scrollingDown ? this.categories.length - 1 - i : i,\n            category = this.categories[ii],\n            component = this.categoryRefs[`category-${ii}`];\n\n        if (component) {\n          let active = component.handleScroll(scrollTop);\n\n          if (!minTop || component.top < minTop) {\n            if (component.top > 0) {\n              minTop = component.top;\n            }\n          }\n\n          if (active && !activeCategory) {\n            activeCategory = category;\n          }\n        }\n      }\n\n      if (scrollTop < minTop) {\n        activeCategory = this.categories.filter(category => !(category.anchor === false))[0];\n      } else if (scrollTop + this.clientHeight >= this.scrollHeight) {\n        activeCategory = this.categories[this.categories.length - 1];\n      }\n    }\n\n    if (activeCategory) {\n      let {\n        anchors\n      } = this,\n          {\n        name: categoryName\n      } = activeCategory;\n\n      if (anchors.state.selected != categoryName) {\n        anchors.setState({\n          selected: categoryName\n        });\n      }\n    }\n\n    this.scrollTop = scrollTop;\n  }\n\n  handleSearch(emojis) {\n    this.SEARCH_CATEGORY.emojis = emojis;\n\n    for (let i = 0, l = this.categories.length; i < l; i++) {\n      let component = this.categoryRefs[`category-${i}`];\n\n      if (component && component.props.name != 'Search') {\n        let display = emojis ? 'none' : 'inherit';\n        component.updateDisplay(display);\n      }\n    }\n\n    this.forceUpdate();\n\n    if (this.scroll) {\n      this.scroll.scrollTop = 0;\n    }\n\n    this.handleScroll();\n  }\n\n  handleAnchorClick(category, i) {\n    var component = this.categoryRefs[`category-${i}`],\n        {\n      scroll,\n      anchors\n    } = this,\n        scrollToComponent = null;\n\n    scrollToComponent = () => {\n      if (component) {\n        let {\n          top\n        } = component;\n\n        if (category.first) {\n          top = 0;\n        } else {\n          top += 1;\n        }\n\n        scroll.scrollTop = top;\n      }\n    };\n\n    if (this.SEARCH_CATEGORY.emojis) {\n      this.handleSearch(null);\n      this.search.clear();\n      requestAnimationFrame(scrollToComponent);\n    } else {\n      scrollToComponent();\n    }\n  }\n\n  handleSkinChange(skin) {\n    var newState = {\n      skin: skin\n    },\n        {\n      onSkinChange\n    } = this.props;\n    this.setState(newState);\n    store.update(newState);\n    onSkinChange(skin);\n  }\n\n  handleKeyDown(e) {\n    let handled = false;\n\n    switch (e.keyCode) {\n      case 13:\n        let emoji;\n\n        if (this.SEARCH_CATEGORY.emojis && this.SEARCH_CATEGORY.emojis.length && (emoji = getSanitizedData(this.SEARCH_CATEGORY.emojis[0], this.state.skin, this.props.set, this.props.data))) {\n          this.handleEmojiSelect(emoji);\n          handled = true;\n        }\n\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n    }\n  }\n\n  updateCategoriesSize() {\n    for (let i = 0, l = this.categories.length; i < l; i++) {\n      let component = this.categoryRefs[`category-${i}`];\n      if (component) component.memoizeSize();\n    }\n\n    if (this.scroll) {\n      let target = this.scroll;\n      this.scrollHeight = target.scrollHeight;\n      this.clientHeight = target.clientHeight;\n    }\n  }\n\n  getCategories() {\n    return this.state.firstRender ? this.categories.slice(0, 3) : this.categories;\n  }\n\n  setAnchorsRef(c) {\n    this.anchors = c;\n  }\n\n  setSearchRef(c) {\n    this.search = c;\n  }\n\n  setPreviewRef(c) {\n    this.preview = c;\n  }\n\n  setScrollRef(c) {\n    this.scroll = c;\n  }\n\n  setCategoryRef(name, c) {\n    if (!this.categoryRefs) {\n      this.categoryRefs = {};\n    }\n\n    this.categoryRefs[name] = c;\n  }\n\n  render() {\n    var {\n      perLine,\n      emojiSize,\n      set,\n      sheetSize,\n      sheetColumns,\n      sheetRows,\n      style,\n      title,\n      emoji,\n      color,\n      native,\n      backgroundImageFn,\n      emojisToShowFilter,\n      showPreview,\n      showSkinTones,\n      emojiTooltip,\n      useButton,\n      include,\n      exclude,\n      recent,\n      autoFocus,\n      skinEmoji,\n      notFound,\n      notFoundEmoji\n    } = this.props;\n    var width = perLine * (emojiSize + 12) + 12 + 2 + measureScrollbar();\n    var theme = this.getPreferredTheme();\n    var skin = this.props.skin || this.state.skin || store.get('skin') || this.props.defaultSkin;\n    return React.createElement(\"section\", {\n      style: _objectSpread({\n        width: width\n      }, style),\n      className: `emoji-mart emoji-mart-${theme}`,\n      \"aria-label\": title,\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(\"div\", {\n      className: \"emoji-mart-bar\"\n    }, React.createElement(Anchors, {\n      ref: this.setAnchorsRef,\n      data: this.data,\n      i18n: this.i18n,\n      color: color,\n      categories: this.categories,\n      onAnchorClick: this.handleAnchorClick,\n      icons: this.icons\n    })), React.createElement(Search, {\n      ref: this.setSearchRef,\n      onSearch: this.handleSearch,\n      data: this.data,\n      i18n: this.i18n,\n      emojisToShowFilter: emojisToShowFilter,\n      include: include,\n      exclude: exclude,\n      custom: this.CUSTOM,\n      autoFocus: autoFocus\n    }), React.createElement(\"div\", {\n      ref: this.setScrollRef,\n      className: \"emoji-mart-scroll\",\n      onScroll: this.handleScroll\n    }, this.getCategories().map((category, i) => {\n      return React.createElement(Category, {\n        ref: this.setCategoryRef.bind(this, `category-${i}`),\n        key: category.name,\n        id: category.id,\n        name: category.name,\n        emojis: category.emojis,\n        perLine: perLine,\n        native: native,\n        hasStickyPosition: this.hasStickyPosition,\n        data: this.data,\n        i18n: this.i18n,\n        recent: category.id == this.RECENT_CATEGORY.id ? recent : undefined,\n        custom: category.id == this.RECENT_CATEGORY.id ? this.CUSTOM : undefined,\n        emojiProps: {\n          native: native,\n          skin: skin,\n          size: emojiSize,\n          set: set,\n          sheetSize: sheetSize,\n          sheetColumns: sheetColumns,\n          sheetRows: sheetRows,\n          forceSize: native,\n          tooltip: emojiTooltip,\n          backgroundImageFn: backgroundImageFn,\n          useButton: useButton,\n          onOver: this.handleEmojiOver,\n          onLeave: this.handleEmojiLeave,\n          onClick: this.handleEmojiClick\n        },\n        notFound: notFound,\n        notFoundEmoji: notFoundEmoji\n      });\n    })), (showPreview || showSkinTones) && React.createElement(\"div\", {\n      className: \"emoji-mart-bar\"\n    }, React.createElement(Preview, {\n      ref: this.setPreviewRef,\n      data: this.data,\n      title: title,\n      emoji: emoji,\n      showSkinTones: showSkinTones,\n      showPreview: showPreview,\n      emojiProps: {\n        native: native,\n        size: 38,\n        skin: skin,\n        set: set,\n        sheetSize: sheetSize,\n        sheetColumns: sheetColumns,\n        sheetRows: sheetRows,\n        backgroundImageFn: backgroundImageFn\n      },\n      skinsProps: {\n        skin: skin,\n        onChange: this.handleSkinChange,\n        skinEmoji: skinEmoji\n      },\n      i18n: this.i18n\n    })));\n  }\n\n}\nNimblePicker.propTypes\n/* remove-proptypes */\n= _objectSpread({}, PickerPropTypes, {\n  data: PropTypes.object.isRequired\n});\nNimblePicker.defaultProps = _objectSpread({}, PickerDefaultProps);"]},"metadata":{},"sourceType":"module"}