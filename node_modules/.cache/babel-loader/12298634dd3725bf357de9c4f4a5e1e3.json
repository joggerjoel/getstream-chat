{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Skins from './skins';\nexport default class SkinsDot extends Skins {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleKeyDown(event) {\n    // if either enter or space is pressed, then execute\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  }\n\n  render() {\n    const {\n      skin,\n      i18n\n    } = this.props;\n    const {\n      opened\n    } = this.state;\n    const skinToneNodes = [];\n\n    for (let skinTone = 1; skinTone <= 6; skinTone++) {\n      const selected = skinTone === skin;\n      const visible = opened || selected;\n      skinToneNodes.push(React.createElement(\"span\", _extends({\n        key: `skin-tone-${skinTone}`,\n        className: `emoji-mart-skin-swatch${selected ? ' selected' : ''}`,\n        \"aria-label\": i18n.skintones[skinTone],\n        \"aria-hidden\": !visible\n      }, opened ? {\n        role: 'menuitem'\n      } : {}), React.createElement(\"span\", _extends({\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        role: \"button\"\n      }, selected ? {\n        'aria-haspopup': true,\n        'aria-expanded': !!opened\n      } : {}, opened ? {\n        'aria-pressed': !!selected\n      } : {}, {\n        tabIndex: visible ? '0' : '',\n        \"aria-label\": i18n.skintones[skinTone],\n        title: i18n.skintones[skinTone],\n        \"data-skin\": skinTone,\n        className: `emoji-mart-skin emoji-mart-skin-tone-${skinTone}`\n      }))));\n    }\n\n    return React.createElement(\"section\", {\n      className: `emoji-mart-skin-swatches${opened ? ' opened' : ''}`,\n      \"aria-label\": i18n.skintext\n    }, React.createElement(\"div\", opened ? {\n      role: 'menubar'\n    } : {}, skinToneNodes));\n  }\n\n}\nSkinsDot.propTypes\n/* remove-proptypes */\n= {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  i18n: PropTypes.object\n};\nSkinsDot.defaultProps = {\n  onChange: () => {}\n};","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/node_modules/emoji-mart/dist-modern/components/skins-dot.js"],"names":["_extends","React","PropTypes","Skins","SkinsDot","constructor","props","handleClick","bind","handleKeyDown","event","keyCode","preventDefault","render","skin","i18n","opened","state","skinToneNodes","skinTone","selected","visible","push","createElement","key","className","skintones","role","onClick","onKeyDown","tabIndex","title","skintext","propTypes","onChange","func","number","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Skins from './skins';\nexport default class SkinsDot extends Skins {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleKeyDown(event) {\n    // if either enter or space is pressed, then execute\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  }\n\n  render() {\n    const {\n      skin,\n      i18n\n    } = this.props;\n    const {\n      opened\n    } = this.state;\n    const skinToneNodes = [];\n\n    for (let skinTone = 1; skinTone <= 6; skinTone++) {\n      const selected = skinTone === skin;\n      const visible = opened || selected;\n      skinToneNodes.push(React.createElement(\"span\", _extends({\n        key: `skin-tone-${skinTone}`,\n        className: `emoji-mart-skin-swatch${selected ? ' selected' : ''}`,\n        \"aria-label\": i18n.skintones[skinTone],\n        \"aria-hidden\": !visible\n      }, opened ? {\n        role: 'menuitem'\n      } : {}), React.createElement(\"span\", _extends({\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        role: \"button\"\n      }, selected ? {\n        'aria-haspopup': true,\n        'aria-expanded': !!opened\n      } : {}, opened ? {\n        'aria-pressed': !!selected\n      } : {}, {\n        tabIndex: visible ? '0' : '',\n        \"aria-label\": i18n.skintones[skinTone],\n        title: i18n.skintones[skinTone],\n        \"data-skin\": skinTone,\n        className: `emoji-mart-skin emoji-mart-skin-tone-${skinTone}`\n      }))));\n    }\n\n    return React.createElement(\"section\", {\n      className: `emoji-mart-skin-swatches${opened ? ' opened' : ''}`,\n      \"aria-label\": i18n.skintext\n    }, React.createElement(\"div\", opened ? {\n      role: 'menubar'\n    } : {}, skinToneNodes));\n  }\n\n}\nSkinsDot.propTypes\n/* remove-proptypes */\n= {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  i18n: PropTypes.object\n};\nSkinsDot.defaultProps = {\n  onChange: () => {}\n};"]},"metadata":{},"sourceType":"module"}