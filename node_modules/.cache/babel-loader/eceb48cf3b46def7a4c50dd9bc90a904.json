{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { search as icons } from '../svgs';\nimport NimbleEmojiIndex from '../utils/emoji-index/nimble-emoji-index';\nimport { throttleIdleTask } from '../utils/index';\nlet id = 0;\nexport default class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      icon: icons.search,\n      isSearching: false,\n      id: ++id\n    };\n    this.data = props.data;\n    this.emojiIndex = new NimbleEmojiIndex(this.data);\n    this.setRef = this.setRef.bind(this);\n    this.clear = this.clear.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this); // throttle keyboard input so that typing isn't delayed\n\n    this.handleChange = throttleIdleTask(this.handleChange.bind(this));\n  }\n\n  componentDidMount() {\n    // in some cases (e.g. preact) the input may already be pre-populated\n    // this.input is undefined in Jest tests\n    if (this.input && this.input.value) {\n      this.search(this.input.value);\n    }\n  }\n\n  search(value) {\n    if (value == '') this.setState({\n      icon: icons.search,\n      isSearching: false\n    });else this.setState({\n      icon: icons.delete,\n      isSearching: true\n    });\n    this.props.onSearch(this.emojiIndex.search(value, {\n      emojisToShowFilter: this.props.emojisToShowFilter,\n      maxResults: this.props.maxResults,\n      include: this.props.include,\n      exclude: this.props.exclude,\n      custom: this.props.custom\n    }));\n  }\n\n  clear() {\n    if (this.input.value == '') return;\n    this.input.value = '';\n    this.input.focus();\n    this.search('');\n  }\n\n  handleChange() {\n    if (this.input) {\n      this.search(this.input.value);\n    }\n  }\n\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      this.clear();\n    }\n  }\n\n  setRef(c) {\n    this.input = c;\n  }\n\n  render() {\n    const {\n      i18n,\n      autoFocus\n    } = this.props;\n    const {\n      icon,\n      isSearching,\n      id\n    } = this.state;\n    const inputId = `emoji-mart-search-${id}`;\n    return React.createElement(\"section\", {\n      className: \"emoji-mart-search\",\n      \"aria-label\": i18n.search\n    }, React.createElement(\"input\", {\n      id: inputId,\n      ref: this.setRef,\n      type: \"search\",\n      onChange: this.handleChange,\n      placeholder: i18n.search,\n      autoFocus: autoFocus\n    }), React.createElement(\"label\", {\n      className: \"emoji-mart-sr-only\",\n      htmlFor: inputId\n    }, i18n.search), React.createElement(\"button\", {\n      className: \"emoji-mart-search-icon\",\n      onClick: this.clear,\n      onKeyUp: this.handleKeyUp,\n      \"aria-label\": i18n.clear,\n      disabled: !isSearching\n    }, icon()));\n  }\n\n}\nSearch.propTypes\n/* remove-proptypes */\n= {\n  onSearch: PropTypes.func,\n  maxResults: PropTypes.number,\n  emojisToShowFilter: PropTypes.func,\n  autoFocus: PropTypes.bool\n};\nSearch.defaultProps = {\n  onSearch: () => {},\n  maxResults: 75,\n  emojisToShowFilter: null,\n  autoFocus: false\n};","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/node_modules/emoji-mart/dist-modern/components/search.js"],"names":["React","PropTypes","search","icons","NimbleEmojiIndex","throttleIdleTask","id","Search","PureComponent","constructor","props","state","icon","isSearching","data","emojiIndex","setRef","bind","clear","handleKeyUp","handleChange","componentDidMount","input","value","setState","delete","onSearch","emojisToShowFilter","maxResults","include","exclude","custom","focus","e","keyCode","c","render","i18n","autoFocus","inputId","createElement","className","ref","type","onChange","placeholder","htmlFor","onClick","onKeyUp","disabled","propTypes","func","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { search as icons } from '../svgs';\nimport NimbleEmojiIndex from '../utils/emoji-index/nimble-emoji-index';\nimport { throttleIdleTask } from '../utils/index';\nlet id = 0;\nexport default class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      icon: icons.search,\n      isSearching: false,\n      id: ++id\n    };\n    this.data = props.data;\n    this.emojiIndex = new NimbleEmojiIndex(this.data);\n    this.setRef = this.setRef.bind(this);\n    this.clear = this.clear.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this); // throttle keyboard input so that typing isn't delayed\n\n    this.handleChange = throttleIdleTask(this.handleChange.bind(this));\n  }\n\n  componentDidMount() {\n    // in some cases (e.g. preact) the input may already be pre-populated\n    // this.input is undefined in Jest tests\n    if (this.input && this.input.value) {\n      this.search(this.input.value);\n    }\n  }\n\n  search(value) {\n    if (value == '') this.setState({\n      icon: icons.search,\n      isSearching: false\n    });else this.setState({\n      icon: icons.delete,\n      isSearching: true\n    });\n    this.props.onSearch(this.emojiIndex.search(value, {\n      emojisToShowFilter: this.props.emojisToShowFilter,\n      maxResults: this.props.maxResults,\n      include: this.props.include,\n      exclude: this.props.exclude,\n      custom: this.props.custom\n    }));\n  }\n\n  clear() {\n    if (this.input.value == '') return;\n    this.input.value = '';\n    this.input.focus();\n    this.search('');\n  }\n\n  handleChange() {\n    if (this.input) {\n      this.search(this.input.value);\n    }\n  }\n\n  handleKeyUp(e) {\n    if (e.keyCode === 13) {\n      this.clear();\n    }\n  }\n\n  setRef(c) {\n    this.input = c;\n  }\n\n  render() {\n    const {\n      i18n,\n      autoFocus\n    } = this.props;\n    const {\n      icon,\n      isSearching,\n      id\n    } = this.state;\n    const inputId = `emoji-mart-search-${id}`;\n    return React.createElement(\"section\", {\n      className: \"emoji-mart-search\",\n      \"aria-label\": i18n.search\n    }, React.createElement(\"input\", {\n      id: inputId,\n      ref: this.setRef,\n      type: \"search\",\n      onChange: this.handleChange,\n      placeholder: i18n.search,\n      autoFocus: autoFocus\n    }), React.createElement(\"label\", {\n      className: \"emoji-mart-sr-only\",\n      htmlFor: inputId\n    }, i18n.search), React.createElement(\"button\", {\n      className: \"emoji-mart-search-icon\",\n      onClick: this.clear,\n      onKeyUp: this.handleKeyUp,\n      \"aria-label\": i18n.clear,\n      disabled: !isSearching\n    }, icon()));\n  }\n\n}\nSearch.propTypes\n/* remove-proptypes */\n= {\n  onSearch: PropTypes.func,\n  maxResults: PropTypes.number,\n  emojisToShowFilter: PropTypes.func,\n  autoFocus: PropTypes.bool\n};\nSearch.defaultProps = {\n  onSearch: () => {},\n  maxResults: 75,\n  emojisToShowFilter: null,\n  autoFocus: false\n};"]},"metadata":{},"sourceType":"module"}