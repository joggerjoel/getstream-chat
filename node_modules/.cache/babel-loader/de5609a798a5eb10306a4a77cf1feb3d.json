{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport NimbleEmoji from './emoji/nimble-emoji';\nimport Skins from './skins';\nexport default class SkinsEmoji extends Skins {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const {\n      skin,\n      emojiProps,\n      data,\n      skinEmoji,\n      i18n\n    } = this.props;\n    const {\n      opened\n    } = this.state;\n    const skinToneNodes = [];\n\n    for (let skinTone = 1; skinTone <= 6; skinTone++) {\n      const selected = skinTone === skin;\n      skinToneNodes.push(React.createElement(\"span\", {\n        key: `skin-tone-${skinTone}`,\n        className: `emoji-mart-skin-swatch custom${selected ? ' selected' : ''}`\n      }, React.createElement(\"span\", {\n        onClick: this.handleClick,\n        \"data-skin\": skinTone,\n        className: `emoji-mart-skin-tone-${skinTone}`\n      }, NimbleEmoji({\n        emoji: skinEmoji,\n        data: data,\n        skin: skinTone,\n        backgroundImageFn: emojiProps.backgroundImageFn,\n        native: emojiProps.native,\n        set: emojiProps.set,\n        sheetSize: emojiProps.sheetSize,\n        size: 23\n      }))));\n    }\n\n    return React.createElement(\"div\", {\n      className: `emoji-mart-skin-swatches custom${opened ? ' opened' : ''}`\n    }, React.createElement(\"div\", {\n      className: `emoji-mart-skin-text${opened ? ' opened' : ''}`\n    }, i18n.skintext), skinToneNodes);\n  }\n\n}\nSkinsEmoji.propTypes\n/* remove-proptypes */\n= {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  emojiProps: PropTypes.object.isRequired,\n  skinTone: PropTypes.number,\n  skinEmoji: PropTypes.string.isRequired,\n  i18n: PropTypes.object\n};\nSkinsEmoji.defaultProps = {\n  onChange: () => {},\n  skinTone: null\n};","map":{"version":3,"sources":["/Users/jlabelle/Documents/Projects/benzinga/website-react-examples/chat-exmple/node_modules/emoji-mart/dist-modern/components/skins-emoji.js"],"names":["React","PropTypes","NimbleEmoji","Skins","SkinsEmoji","constructor","props","handleClick","bind","render","skin","emojiProps","data","skinEmoji","i18n","opened","state","skinToneNodes","skinTone","selected","push","createElement","key","className","onClick","emoji","backgroundImageFn","native","set","sheetSize","size","skintext","propTypes","onChange","func","number","isRequired","object","string","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,eAAe,MAAMC,UAAN,SAAyBD,KAAzB,CAA+B;AAC5CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,IAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA;AALI,QAMF,KAAKR,KANT;AAOA,UAAM;AACJS,MAAAA;AADI,QAEF,KAAKC,KAFT;AAGA,UAAMC,aAAa,GAAG,EAAtB;;AAEA,SAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,IAAI,CAAnC,EAAsCA,QAAQ,EAA9C,EAAkD;AAChD,YAAMC,QAAQ,GAAGD,QAAQ,KAAKR,IAA9B;AACAO,MAAAA,aAAa,CAACG,IAAd,CAAmBpB,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B;AAC7CC,QAAAA,GAAG,EAAG,aAAYJ,QAAS,EADkB;AAE7CK,QAAAA,SAAS,EAAG,gCAA+BJ,QAAQ,GAAG,WAAH,GAAiB,EAAG;AAF1B,OAA5B,EAGhBnB,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B;AAC7BG,QAAAA,OAAO,EAAE,KAAKjB,WADe;AAE7B,qBAAaW,QAFgB;AAG7BK,QAAAA,SAAS,EAAG,wBAAuBL,QAAS;AAHf,OAA5B,EAIAhB,WAAW,CAAC;AACbuB,QAAAA,KAAK,EAAEZ,SADM;AAEbD,QAAAA,IAAI,EAAEA,IAFO;AAGbF,QAAAA,IAAI,EAAEQ,QAHO;AAIbQ,QAAAA,iBAAiB,EAAEf,UAAU,CAACe,iBAJjB;AAKbC,QAAAA,MAAM,EAAEhB,UAAU,CAACgB,MALN;AAMbC,QAAAA,GAAG,EAAEjB,UAAU,CAACiB,GANH;AAObC,QAAAA,SAAS,EAAElB,UAAU,CAACkB,SAPT;AAQbC,QAAAA,IAAI,EAAE;AARO,OAAD,CAJX,CAHgB,CAAnB;AAiBD;;AAED,WAAO9B,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAChCE,MAAAA,SAAS,EAAG,kCAAiCR,MAAM,GAAG,SAAH,GAAe,EAAG;AADrC,KAA3B,EAEJf,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAC5BE,MAAAA,SAAS,EAAG,uBAAsBR,MAAM,GAAG,SAAH,GAAe,EAAG;AAD9B,KAA3B,EAEAD,IAAI,CAACiB,QAFL,CAFI,EAIYd,aAJZ,CAAP;AAKD;;AA7C2C;AAgD9Cb,UAAU,CAAC4B;AACX;AADA,EAEE;AACAC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,IADpB;AAEAxB,EAAAA,IAAI,EAAET,SAAS,CAACkC,MAAV,CAAiBC,UAFvB;AAGAzB,EAAAA,UAAU,EAAEV,SAAS,CAACoC,MAAV,CAAiBD,UAH7B;AAIAlB,EAAAA,QAAQ,EAAEjB,SAAS,CAACkC,MAJpB;AAKAtB,EAAAA,SAAS,EAAEZ,SAAS,CAACqC,MAAV,CAAiBF,UAL5B;AAMAtB,EAAAA,IAAI,EAAEb,SAAS,CAACoC;AANhB,CAFF;AAUAjC,UAAU,CAACmC,YAAX,GAA0B;AACxBN,EAAAA,QAAQ,EAAE,MAAM,CAAE,CADM;AAExBf,EAAAA,QAAQ,EAAE;AAFc,CAA1B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport NimbleEmoji from './emoji/nimble-emoji';\nimport Skins from './skins';\nexport default class SkinsEmoji extends Skins {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const {\n      skin,\n      emojiProps,\n      data,\n      skinEmoji,\n      i18n\n    } = this.props;\n    const {\n      opened\n    } = this.state;\n    const skinToneNodes = [];\n\n    for (let skinTone = 1; skinTone <= 6; skinTone++) {\n      const selected = skinTone === skin;\n      skinToneNodes.push(React.createElement(\"span\", {\n        key: `skin-tone-${skinTone}`,\n        className: `emoji-mart-skin-swatch custom${selected ? ' selected' : ''}`\n      }, React.createElement(\"span\", {\n        onClick: this.handleClick,\n        \"data-skin\": skinTone,\n        className: `emoji-mart-skin-tone-${skinTone}`\n      }, NimbleEmoji({\n        emoji: skinEmoji,\n        data: data,\n        skin: skinTone,\n        backgroundImageFn: emojiProps.backgroundImageFn,\n        native: emojiProps.native,\n        set: emojiProps.set,\n        sheetSize: emojiProps.sheetSize,\n        size: 23\n      }))));\n    }\n\n    return React.createElement(\"div\", {\n      className: `emoji-mart-skin-swatches custom${opened ? ' opened' : ''}`\n    }, React.createElement(\"div\", {\n      className: `emoji-mart-skin-text${opened ? ' opened' : ''}`\n    }, i18n.skintext), skinToneNodes);\n  }\n\n}\nSkinsEmoji.propTypes\n/* remove-proptypes */\n= {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  emojiProps: PropTypes.object.isRequired,\n  skinTone: PropTypes.number,\n  skinEmoji: PropTypes.string.isRequired,\n  i18n: PropTypes.object\n};\nSkinsEmoji.defaultProps = {\n  onChange: () => {},\n  skinTone: null\n};"]},"metadata":{},"sourceType":"module"}